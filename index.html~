<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Mini Juego de Caminar</title>
<style>
  #contenedor {
    position: relative;
    width: 1200px; /* Tamaño del contenedor */
    height: 400px; /* Tamaño del contenedor */
    border: 1px solid black; /* Borde para visualizar el contenedor */
    overflow: hidden; /* Evita que el personaje salga del contenedor */
  }

  #personaje {
    position: absolute;
    width: 50px;
    height: 50px;
    background-image: url("https://static1.cbrimages.com/wordpress/wp-content/uploads/2023/07/10-best-dragon-ball-super-main-character-instead-of-goku.jpg?q=50&fit=contain&w=1140&h=&dpr=1.5");
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
    left: 0;
    top: 0;
  }
</style>
</head>
<body>

<div id="contenedor">
  <div id="personaje"></div>
</div>

<script>
  // Obtener el elemento del contenedor y del personaje
  const contenedor = document.getElementById('contenedor');
  const personaje = document.getElementById('personaje');

  // Tamaño del contenedor
  const contenedorWidth = contenedor.clientWidth;
  const contenedorHeight = contenedor.clientHeight;

  // Tamaño del paso
  const paso = 10;

  // Posición inicial del personaje
  let posX = 0;
  let posY = 0;

  // Función para mover el personaje
  function moverPersonaje(event) {
    switch(event.key) {
      case 'ArrowUp':
        if (posY - paso >= 0) {
          posY -= paso;
        }
        break;
      case 'ArrowDown':
        if (posY + paso <= contenedorHeight - personaje.clientHeight) {
          posY += paso;
        }
        break;
      case 'ArrowLeft':
        if (posX - paso >= 0) {
          posX -= paso;
        }
        break;
      case 'ArrowRight':
        if (posX + paso <= contenedorWidth - personaje.clientWidth) {
          posX += paso;
        }
        break;
      default:
        return; // Salir de la función si no es una tecla de dirección
    }

    // Actualizar la posición del personaje
    personaje.style.left = posX + 'px';
    personaje.style.top = posY + 'px';
  }

  // Agregar un event listener para las teclas de dirección
  document.addEventListener('keydown', moverPersonaje);
</script>

</body>
</html>
